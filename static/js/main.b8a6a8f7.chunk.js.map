{"version":3,"sources":["components/sectionHeader.js","components/home.js","components/aboutMe.js","components/contact.js","components/totalExperience.js","components/footer.js","App.js","serviceWorker.js","index.js","developerCode.svg"],"names":["sectionHeader","props","className","name","home","itemProp","aboutMe","Meta","Card","contact","hoverable","style","width","cover","alt","src","title","description","totalExperience","span","footer","Header","Layout","Footer","Content","App","id","href","developerCodesvg","to","exact","activeClassName","path","children","Home","experience","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.b8a6a8f7.chunk.js","sourcesContent":["//import React, { useState } from 'react';\nimport React from 'react';\nfunction sectionHeader(props) {\n  // Declare a new state variable, which we'll call \"count\"\n // const [count, setCount] = useState(0);\n\n  return (\n    <><article className=\"markdown\">\n      <div className=\"title-region\">\n        <h1>{props.name}\n        </h1>\n      </div>\n    </article>\n    <section className=\"markdown\"><p>Here list all the resources that related with Ant Design.</p></section></>\n  );\n};\nexport default sectionHeader;","import React from 'react';\nimport {  } from '@ant-design/icons';\n//import filmStripe from './filmstripe';\nimport SectionHeader from './sectionHeader';\n\n\nconst home = (props) =>{\n    return(\n      <>\n        <div className=\"main-hero-text\">\n          <div className=\"content\">\n            <div className=\"text-loading-mask\">\n              <div className=\"text-loading-overlay\">\n                </div>\n                <SectionHeader name=\"Home\"></SectionHeader>\n                </div>\n                <div>\n                  <div className=\"text-loading-mask\">\n                    <div className=\"text-loading-overlay\">\n                      </div>\n                      <h3 itemProp=\"specialty\" className=\"main-hero-subtitle h5\">Front-end Developer</h3>\n                      </div>\n                      </div>\n                      <div>\n                        <div  className=\"text-loading-mask\">\n                          <div className=\"text-loading-overlay\">\n                        </div>\n                        <h3 itemProp=\"specialty\" className=\"main-hero-subtitle h5\">Front-end Developer</h3>\n                  </div>\n                </div>\n              </div>\n          </div>\n\n        </>\n    );\n}\nexport default home;\n","import React from 'react';\nimport SectionHeader  from './sectionHeader';\n\n\nconst aboutMe = (props) =>{\n  return( <SectionHeader name=\"About Me\"></SectionHeader>)\n}\n\n\nexport default aboutMe;","import React from 'react';\nimport { Card } from 'antd';\nimport SectionHeader from './sectionHeader';\nconst { Meta } = Card; \nconst contact = () =>{\n  return(\n    <><SectionHeader name=\"Contact\"></SectionHeader><Card\n      hoverable\n      style={{ width: 240 }}\n      cover={<img alt=\"example\" src=\"\" />}\n    >\n      <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\n\n\n      <Meta title=\"9886188822\"></Meta>\n      <Meta title=\"pradzz.rawat6@gmail.com\"></Meta>\n    </Card></>);\n}\n\n\nexport default contact;","import React from 'react';\nimport { Row, Col } from 'antd';\nimport SectionHeader from './sectionHeader';\n\nconst totalExperience = () =>{\n    return(<><Row>\n        <Col span={24}> <SectionHeader name=\"Experience\"></SectionHeader></Col>\n    </Row><Row>\n            <Col span={12}>2012-2014</Col>\n            <Col span={12}>Project – HRLIVE((http://hrlive.me/company/)</Col>\n        </Row><Row>\n            <Col span={8}>Project – LUFTANSA</Col>\n            <Col span={8}>Project – DASH Century 21</Col>\n            <Col span={8}>Project – Combo Suite – software engineer(promoted)</Col>\n        </Row><Row>\n            <Col span={6}>Project – Virtual FTON</Col>\n            <Col span={6}>Project – Puppeteer Automation </Col>\n            <Col span={6}>Project – HCM EKYC  </Col>\n            <Col span={6}>Project – HCM Payement Defferel </Col>\n        </Row></>);\n}\n\n\nexport default totalExperience;","import React from 'react';\n\nconst footer = () =>{\n    return(<h1>hello</h1>);\n}\nexport default footer;","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport { Layout } from 'antd';\nimport \"./App.css\";\nimport Home from \"./components/home\"\nimport aboutMe from \"./components/aboutMe\";\nimport contact from \"./components/contact\";\nimport experience from \"./components/totalExperience\";\nimport footer from \"./components/footer\";\nimport { Space } from \"antd\";\nimport developerCodesvg from './developerCode.svg' ; \n\nconst { Header, Footer, Content } = Layout;\nfunction App() {\n  return (\n    \n    <Router>\n      <div>\n      <Layout>\n      <Header id=\"header\" className=\"clearfix\">\n     <div className=\"ant-row\">\n     <div className=\"ant-col ant-col-xs-24 ant-col-sm-24 ant-col-md-6 ant-col-lg-6 ant-col-xl-5 ant-col-xxl-4\"><h1>\n       <a id=\"logo\" href=\"/\"><img alt=\"logo\" src={developerCodesvg}/>Pradeep Rawat - Developer</a></h1>\n       </div>\n       <div className=\"ant-col menu-row ant-col-xs-0 ant-col-sm-0 ant-col-md-18 ant-col-lg-18 ant-col-xl-9 ant-col-xxl-20\"></div>\n       <div className=\"ant-col ant-col-xs-24 ant-col-sm-24 ant-col-md-6 ant-col-lg-6 ant-col-xl-5 ant-col-xxl-4\">\n    \n    <Space>\n      <NavLink to=\"/\" exact className=\"link\" activeClassName=\"active\">\n          Home\n        </NavLink>\n        <NavLink to=\"/aboutMe\" className=\"link\" activeClassName=\"active\">\n          About Me\n        </NavLink>\n        <NavLink to=\"/experience\" className=\"link\" activeClassName=\"active\">\n          Experience\n        </NavLink>\n        <NavLink to=\"/contact\" className=\"link\" activeClassName=\"active\">\n          Contact\n        </NavLink>\n        </Space>\n        </div>\n        </div>\n      </Header>\n      <Content>\n      <div className=\"main-wrapper\">\n      <Switch>\n        <Route path=\"/\" exact children={Home} />\n          <Route path=\"/aboutMe\" exact children={aboutMe} />\n          <Route path=\"/experience\" children={experience} />\n          <Route path=\"/contact\" children={contact} />\n         \n        </Switch>\n        </div>\n      </Content>\n      \n  <Footer>{footer}</Footer>\n    </Layout>\n       \n\n       \n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom'\nReactDOM.render(\n  <React.StrictMode>\n    <Router><App /></Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/developerCode.214f26a6.svg\";"],"sourceRoot":""}