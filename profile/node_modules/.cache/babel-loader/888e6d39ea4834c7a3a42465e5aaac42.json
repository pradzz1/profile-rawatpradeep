{"ast":null,"code":"var _jsxFileName = \"/Users/pradeeprawat/Documents/blockchain/profile/profile-rawatpradeep/profile/src/components/worklog/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Table from \"./Table\";\nimport \"./table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Genres = _ref => {\n  let {\n    values\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: values.map((genre, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge\",\n        children: genre\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_c = Genres;\n\nfunction WorkLog() {\n  _s();\n\n  const columns = useMemo(() => [{\n    Header: \"TV Show\",\n    columns: [{\n      Header: \"Name\",\n      accessor: \"show.name\"\n    }, {\n      Header: \"Type\",\n      accessor: \"show.type\"\n    }]\n  }, {\n    Header: \"Details\",\n    columns: [{\n      Header: \"Language\",\n      accessor: \"show.language\"\n    }, {\n      Header: \"Genre(s)\",\n      accessor: \"show.genres\",\n      Cell: _ref2 => {\n        let {\n          cell: {\n            value\n          }\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Genres, {\n          values: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 44\n        }, this);\n      }\n    }, {\n      Header: \"Runtime\",\n      accessor: \"show.runtime\",\n      Cell: _ref3 => {\n        let {\n          cell: {\n            value\n          }\n        } = _ref3;\n        const hour = Math.floor(value / 60);\n        const min = Math.floor(value % 60);\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [hour > 0 ? `${hour} hr${hour > 1 ? \"s\" : \"\"} ` : \"\", min > 0 ? `${min} min${min > 1 ? \"s\" : \"\"}` : \"\"]\n        }, void 0, true);\n      }\n    }, {\n      Header: \"Status\",\n      accessor: \"show.status\"\n    }]\n  }], []);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const result = await axios(\"https://api.tvmaze.com/search/shows?q=snow\");\n      setData(result.data);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WorkLog, \"TYGuL0g4zE67Bs30rnnW+EaJADk=\");\n\n_c2 = WorkLog;\nexport default WorkLog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Genres\");\n$RefreshReg$(_c2, \"WorkLog\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","axios","Table","Genres","values","map","genre","idx","WorkLog","columns","Header","accessor","Cell","cell","value","hour","Math","floor","min","data","setData","result"],"sources":["/Users/pradeeprawat/Documents/blockchain/profile/profile-rawatpradeep/profile/src/components/worklog/index.js"],"sourcesContent":["import React, { useMemo, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport Table from \"./Table\";\nimport \"./table.css\";\n\nconst Genres = ({ values }) => {\n  return (\n    <>\n      {values.map((genre, idx) => {\n        return (\n          <span key={idx} className=\"badge\">\n            {genre}\n          </span>\n        );\n      })}\n    </>\n  );\n};\n\nfunction WorkLog() {\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"TV Show\",\n        columns: [\n          {\n            Header: \"Name\",\n            accessor: \"show.name\"\n          },\n          {\n            Header: \"Type\",\n            accessor: \"show.type\"\n          }\n        ]\n      },\n      {\n        Header: \"Details\",\n        columns: [\n          {\n            Header: \"Language\",\n            accessor: \"show.language\"\n          },\n          {\n            Header: \"Genre(s)\",\n            accessor: \"show.genres\",\n            Cell: ({ cell: { value } }) => <Genres values={value} />\n          },\n          {\n            Header: \"Runtime\",\n            accessor: \"show.runtime\",\n            Cell: ({ cell: { value } }) => {\n              const hour = Math.floor(value / 60);\n              const min = Math.floor(value % 60);\n              return (\n                <>\n                  {hour > 0 ? `${hour} hr${hour > 1 ? \"s\" : \"\"} ` : \"\"}\n                  {min > 0 ? `${min} min${min > 1 ? \"s\" : \"\"}` : \"\"}\n                </>\n              );\n            }\n          },\n          {\n            Header: \"Status\",\n            accessor: \"show.status\"\n          }\n        ]\n      }\n    ],\n    []\n  );\n\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const result = await axios(\"https://api.tvmaze.com/search/shows?q=snow\");\n      setData(result.data);\n    })();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Table columns={columns} data={data} />\n    </div>\n  );\n}\n\nexport default WorkLog;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,EAAmCC,SAAnC,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,aAAP;;;;AAEA,MAAMC,MAAM,GAAG,QAAgB;EAAA,IAAf;IAAEC;EAAF,CAAe;EAC7B,oBACE;IAAA,UACGA,MAAM,CAACC,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,KAAgB;MAC1B,oBACE;QAAgB,SAAS,EAAC,OAA1B;QAAA,UACGD;MADH,GAAWC,GAAX;QAAA;QAAA;QAAA;MAAA,QADF;IAKD,CANA;EADH,iBADF;AAWD,CAZD;;KAAMJ,M;;AAcN,SAASK,OAAT,GAAmB;EAAA;;EACjB,MAAMC,OAAO,GAAGX,OAAO,CACrB,MAAM,CACJ;IACEY,MAAM,EAAE,SADV;IAEED,OAAO,EAAE,CACP;MACEC,MAAM,EAAE,MADV;MAEEC,QAAQ,EAAE;IAFZ,CADO,EAKP;MACED,MAAM,EAAE,MADV;MAEEC,QAAQ,EAAE;IAFZ,CALO;EAFX,CADI,EAcJ;IACED,MAAM,EAAE,SADV;IAEED,OAAO,EAAE,CACP;MACEC,MAAM,EAAE,UADV;MAEEC,QAAQ,EAAE;IAFZ,CADO,EAKP;MACED,MAAM,EAAE,UADV;MAEEC,QAAQ,EAAE,aAFZ;MAGEC,IAAI,EAAE;QAAA,IAAC;UAAEC,IAAI,EAAE;YAAEC;UAAF;QAAR,CAAD;QAAA,oBAAyB,QAAC,MAAD;UAAQ,MAAM,EAAEA;QAAhB;UAAA;UAAA;UAAA;QAAA,QAAzB;MAAA;IAHR,CALO,EAUP;MACEJ,MAAM,EAAE,SADV;MAEEC,QAAQ,EAAE,cAFZ;MAGEC,IAAI,EAAE,SAAyB;QAAA,IAAxB;UAAEC,IAAI,EAAE;YAAEC;UAAF;QAAR,CAAwB;QAC7B,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAG,EAAnB,CAAb;QACA,MAAMI,GAAG,GAAGF,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAG,EAAnB,CAAZ;QACA,oBACE;UAAA,WACGC,IAAI,GAAG,CAAP,GAAY,GAAEA,IAAK,MAAKA,IAAI,GAAG,CAAP,GAAW,GAAX,GAAiB,EAAG,GAA5C,GAAiD,EADpD,EAEGG,GAAG,GAAG,CAAN,GAAW,GAAEA,GAAI,OAAMA,GAAG,GAAG,CAAN,GAAU,GAAV,GAAgB,EAAG,EAA1C,GAA8C,EAFjD;QAAA,gBADF;MAMD;IAZH,CAVO,EAwBP;MACER,MAAM,EAAE,QADV;MAEEC,QAAQ,EAAE;IAFZ,CAxBO;EAFX,CAdI,CADe,EAgDrB,EAhDqB,CAAvB;EAmDA,MAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;EAEAC,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,MAAMqB,MAAM,GAAG,MAAMpB,KAAK,CAAC,4CAAD,CAA1B;MACAmB,OAAO,CAACC,MAAM,CAACF,IAAR,CAAP;IACD,CAHD;EAID,CALQ,EAKN,EALM,CAAT;EAOA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE,QAAC,KAAD;MAAO,OAAO,EAAEV,OAAhB;MAAyB,IAAI,EAAEU;IAA/B;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAlEQX,O;;MAAAA,O;AAoET,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}