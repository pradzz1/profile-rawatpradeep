{"ast":null,"code":"var _jsxFileName = \"/Users/pradeeprawat/Documents/blockchain/profile/profile-rawatpradeep/profile/src/components/worklog/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTable, useFilters, useSortBy } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Table(_ref) {\n  _s();\n\n  let {\n    columns,\n    data\n  } = _ref;\n  const [filterInput, setFilterInput] = useState(\"\"); // Use the state and functions returned from useTable to build your UI\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setFilter\n  } = useTable({\n    columns,\n    data\n  }, useFilters, useSortBy);\n\n  const handleFilterChange = e => {\n    const value = e.target.value || undefined;\n    setFilter(\"show.name\", value);\n    setFilterInput(value);\n  }; // Render the UI for your table\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: filterInput,\n      onChange: handleFilterChange,\n      placeholder: \"Search name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            className: column.isSorted ? column.isSortedDesc ? \"sort-desc\" : \"sort-asc\" : \"\",\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Table, \"6qAiXZLV1nFIp5wb/jIiXyHCtMo=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","useTable","useFilters","useSortBy","Table","columns","data","filterInput","setFilterInput","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setFilter","handleFilterChange","e","value","target","undefined","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","render","row","i","getRowProps","cells","cell","getCellProps"],"sources":["/Users/pradeeprawat/Documents/blockchain/profile/profile-rawatpradeep/profile/src/components/worklog/Table.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useTable, useFilters, useSortBy } from \"react-table\";\n\nexport default function Table({ columns, data }) {\n  const [filterInput, setFilterInput] = useState(\"\");\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setFilter\n  } = useTable(\n    {\n      columns,\n      data\n    },\n    useFilters,\n    useSortBy\n  );\n\n  const handleFilterChange = e => {\n    const value = e.target.value || undefined;\n    setFilter(\"show.name\", value);\n    setFilterInput(value);\n  };\n\n  // Render the UI for your table\n  return (\n    <>\n      <input\n        value={filterInput}\n        onChange={handleFilterChange}\n        placeholder={\"Search name\"}\n      />\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  className={\n                    column.isSorted\n                      ? column.isSortedDesc\n                        ? \"sort-desc\"\n                        : \"sort-asc\"\n                      : \"\"\n                  }\n                >\n                  {column.render(\"Header\")}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,QAAgD,aAAhD;;;AAEA,eAAe,SAASC,KAAT,OAAkC;EAAA;;EAAA,IAAnB;IAAEC,OAAF;IAAWC;EAAX,CAAmB;EAC/C,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C,CAD+C,CAE/C;;EACA,MAAM;IACJS,aADI;IAEJC,iBAFI;IAGJC,YAHI;IAIJC,IAJI;IAKJC,UALI;IAMJC;EANI,IAOFb,QAAQ,CACV;IACEI,OADF;IAEEC;EAFF,CADU,EAKVJ,UALU,EAMVC,SANU,CAPZ;;EAgBA,MAAMY,kBAAkB,GAAGC,CAAC,IAAI;IAC9B,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAT,IAAkBE,SAAhC;IACAL,SAAS,CAAC,WAAD,EAAcG,KAAd,CAAT;IACAT,cAAc,CAACS,KAAD,CAAd;EACD,CAJD,CAnB+C,CAyB/C;;;EACA,oBACE;IAAA,wBACE;MACE,KAAK,EAAEV,WADT;MAEE,QAAQ,EAAEQ,kBAFZ;MAGE,WAAW,EAAE;IAHf;MAAA;MAAA;MAAA;IAAA,QADF,eAME,sBAAWN,aAAa,EAAxB;MAAA,wBACE;QAAA,UACGE,YAAY,CAACS,GAAb,CAAiBC,WAAW,iBAC3B,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;UAAA,UACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC7B,mBACMA,MAAM,CAACC,cAAP,CAAsBD,MAAM,CAACE,oBAAP,EAAtB,CADN;YAEE,SAAS,EACPF,MAAM,CAACG,QAAP,GACIH,MAAM,CAACI,YAAP,GACE,WADF,GAEE,UAHN,GAII,EAPR;YAAA,UAUGJ,MAAM,CAACK,MAAP,CAAc,QAAd;UAVH;YAAA;YAAA;YAAA;UAAA,QADD;QADH;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA,QADF,eAqBE,sBAAWnB,iBAAiB,EAA5B;QAAA,UACGE,IAAI,CAACQ,GAAL,CAAS,CAACU,GAAD,EAAMC,CAAN,KAAY;UACpBlB,UAAU,CAACiB,GAAD,CAAV;UACA,oBACE,mBAAQA,GAAG,CAACE,WAAJ,EAAR;YAAA,UACGF,GAAG,CAACG,KAAJ,CAAUb,GAAV,CAAcc,IAAI,IAAI;cACrB,oBACE,mBAAQA,IAAI,CAACC,YAAL,EAAR;gBAAA,UAA8BD,IAAI,CAACL,MAAL,CAAY,MAAZ;cAA9B;gBAAA;gBAAA;gBAAA;cAAA,QADF;YAGD,CAJA;UADH;YAAA;YAAA;YAAA;UAAA,QADF;QASD,CAXA;MADH;QAAA;QAAA;QAAA;MAAA,QArBF;IAAA;MAAA;MAAA;MAAA;IAAA,QANF;EAAA,gBADF;AA6CD;;GAvEuBzB,K;UAUlBH,Q;;;KAVkBG,K"},"metadata":{},"sourceType":"module"}